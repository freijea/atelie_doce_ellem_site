name: Deploy Atelie Doce Ellen to AWS

on:
  push:
    branches:
      - main # Ou 'master', ajuste para sua branch principal

permissions:
  id-token: write # Necessário para autenticação OIDC com a AWS (recomendado)
  contents: read  # Necessário para checkout do código

jobs:
  build:
    name: Build Next.js Static Export
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a versão LTS ou a do seu projeto
          cache: 'npm' # Ou 'yarn'

      - name: Install dependencies
        run: npm ci # Ou yarn install --frozen-lockfile

      - name: Build static website
        run: npm run build # Garanta que 'build' execute 'next build' (com output: 'export')

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-site-build
          path: out/ # Pasta padrão de saída do 'next export'

  deploy:
    name: Deploy to AWS S3 and CloudFront
    needs: build # Depende do job de build
    runs-on: ubuntu-latest
    environment: production # Define o ambiente (opcional, útil para secrets/regras)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: static-site-build
          path: out/

      - name: Configure AWS Credentials (Access Keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: sa-east-1 # SUBSTITUA pela sua região

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ./infra/environments/prod

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color
        working-directory: ./infra/environments/prod

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./infra/environments/prod

      - name: Get Terraform Outputs
        id: tf_outputs
        run: |
          # Extrai saídas importantes para os próximos passos
          S3_BUCKET=$(terraform output -raw s3_bucket_name)
          CLOUDFRONT_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
          echo "CLOUDFRONT_ID=$CLOUDFRONT_ID" >> $GITHUB_ENV
        working-directory: ./infra/environments/prod

      - name: Sync files to S3
        run: aws s3 sync ./out s3://${{ env.S3_BUCKET }}/ --delete --metadata-directive REPLACE

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"